<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangkuo.zxb.lsp.provider.db.dao.TZbLspBalanceDetailDao">
  <resultMap id="BaseResultMap" type="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="benchmark_id" jdbcType="BIGINT" property="benchmarkId" />
    <result column="freight_fee" jdbcType="DECIMAL" property="freightFee" />
    <result column="send_good_fee" jdbcType="DECIMAL" property="sendGoodFee" />
    <result column="premium_fee" jdbcType="DECIMAL" property="premiumFee" />
    <result column="invoice_fee" jdbcType="DECIMAL" property="invoiceFee" />
    <result column="enter_fee" jdbcType="DECIMAL" property="enterFee" />
    <result column="upstairs_fee" jdbcType="DECIMAL" property="upstairsFee" />
    <result column="signed_receive_fee" jdbcType="DECIMAL" property="signedReceiveFee" />
    <result column="unload_fee" jdbcType="DECIMAL" property="unloadFee" />
    <result column="express_fee" jdbcType="DECIMAL" property="expressFee" />
    <result column="change_waybill_fee" jdbcType="DECIMAL" property="changeWaybillFee" />
    <result column="damager_fee" jdbcType="DECIMAL" property="damagerFee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, benchmark_id, freight_fee, send_good_fee, premium_fee, invoice_fee, enter_fee, 
    upstairs_fee, signed_receive_fee, unload_fee, express_fee, change_waybill_fee, damager_fee
  </sql>
  <select id="selectByExample" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetailCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zb_lsp_balance_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zb_lsp_balance_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zb_lsp_balance_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetailCriteria">
    delete from zb_lsp_balance_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zb_lsp_balance_detail (benchmark_id, freight_fee, send_good_fee, 
      premium_fee, invoice_fee, enter_fee, 
      upstairs_fee, signed_receive_fee, unload_fee, 
      express_fee, change_waybill_fee, damager_fee
      )
    values (#{benchmarkId,jdbcType=BIGINT}, #{freightFee,jdbcType=DECIMAL}, #{sendGoodFee,jdbcType=DECIMAL}, 
      #{premiumFee,jdbcType=DECIMAL}, #{invoiceFee,jdbcType=DECIMAL}, #{enterFee,jdbcType=DECIMAL}, 
      #{upstairsFee,jdbcType=DECIMAL}, #{signedReceiveFee,jdbcType=DECIMAL}, #{unloadFee,jdbcType=DECIMAL}, 
      #{expressFee,jdbcType=DECIMAL}, #{changeWaybillFee,jdbcType=DECIMAL}, #{damagerFee,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zb_lsp_balance_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="benchmarkId != null">
        benchmark_id,
      </if>
      <if test="freightFee != null">
        freight_fee,
      </if>
      <if test="sendGoodFee != null">
        send_good_fee,
      </if>
      <if test="premiumFee != null">
        premium_fee,
      </if>
      <if test="invoiceFee != null">
        invoice_fee,
      </if>
      <if test="enterFee != null">
        enter_fee,
      </if>
      <if test="upstairsFee != null">
        upstairs_fee,
      </if>
      <if test="signedReceiveFee != null">
        signed_receive_fee,
      </if>
      <if test="unloadFee != null">
        unload_fee,
      </if>
      <if test="expressFee != null">
        express_fee,
      </if>
      <if test="changeWaybillFee != null">
        change_waybill_fee,
      </if>
      <if test="damagerFee != null">
        damager_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="benchmarkId != null">
        #{benchmarkId,jdbcType=BIGINT},
      </if>
      <if test="freightFee != null">
        #{freightFee,jdbcType=DECIMAL},
      </if>
      <if test="sendGoodFee != null">
        #{sendGoodFee,jdbcType=DECIMAL},
      </if>
      <if test="premiumFee != null">
        #{premiumFee,jdbcType=DECIMAL},
      </if>
      <if test="invoiceFee != null">
        #{invoiceFee,jdbcType=DECIMAL},
      </if>
      <if test="enterFee != null">
        #{enterFee,jdbcType=DECIMAL},
      </if>
      <if test="upstairsFee != null">
        #{upstairsFee,jdbcType=DECIMAL},
      </if>
      <if test="signedReceiveFee != null">
        #{signedReceiveFee,jdbcType=DECIMAL},
      </if>
      <if test="unloadFee != null">
        #{unloadFee,jdbcType=DECIMAL},
      </if>
      <if test="expressFee != null">
        #{expressFee,jdbcType=DECIMAL},
      </if>
      <if test="changeWaybillFee != null">
        #{changeWaybillFee,jdbcType=DECIMAL},
      </if>
      <if test="damagerFee != null">
        #{damagerFee,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetailCriteria" resultType="java.lang.Integer">
    select count(*) from zb_lsp_balance_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zb_lsp_balance_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.benchmarkId != null">
        benchmark_id = #{record.benchmarkId,jdbcType=BIGINT},
      </if>
      <if test="record.freightFee != null">
        freight_fee = #{record.freightFee,jdbcType=DECIMAL},
      </if>
      <if test="record.sendGoodFee != null">
        send_good_fee = #{record.sendGoodFee,jdbcType=DECIMAL},
      </if>
      <if test="record.premiumFee != null">
        premium_fee = #{record.premiumFee,jdbcType=DECIMAL},
      </if>
      <if test="record.invoiceFee != null">
        invoice_fee = #{record.invoiceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.enterFee != null">
        enter_fee = #{record.enterFee,jdbcType=DECIMAL},
      </if>
      <if test="record.upstairsFee != null">
        upstairs_fee = #{record.upstairsFee,jdbcType=DECIMAL},
      </if>
      <if test="record.signedReceiveFee != null">
        signed_receive_fee = #{record.signedReceiveFee,jdbcType=DECIMAL},
      </if>
      <if test="record.unloadFee != null">
        unload_fee = #{record.unloadFee,jdbcType=DECIMAL},
      </if>
      <if test="record.expressFee != null">
        express_fee = #{record.expressFee,jdbcType=DECIMAL},
      </if>
      <if test="record.changeWaybillFee != null">
        change_waybill_fee = #{record.changeWaybillFee,jdbcType=DECIMAL},
      </if>
      <if test="record.damagerFee != null">
        damager_fee = #{record.damagerFee,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zb_lsp_balance_detail
    set id = #{record.id,jdbcType=BIGINT},
      benchmark_id = #{record.benchmarkId,jdbcType=BIGINT},
      freight_fee = #{record.freightFee,jdbcType=DECIMAL},
      send_good_fee = #{record.sendGoodFee,jdbcType=DECIMAL},
      premium_fee = #{record.premiumFee,jdbcType=DECIMAL},
      invoice_fee = #{record.invoiceFee,jdbcType=DECIMAL},
      enter_fee = #{record.enterFee,jdbcType=DECIMAL},
      upstairs_fee = #{record.upstairsFee,jdbcType=DECIMAL},
      signed_receive_fee = #{record.signedReceiveFee,jdbcType=DECIMAL},
      unload_fee = #{record.unloadFee,jdbcType=DECIMAL},
      express_fee = #{record.expressFee,jdbcType=DECIMAL},
      change_waybill_fee = #{record.changeWaybillFee,jdbcType=DECIMAL},
      damager_fee = #{record.damagerFee,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetail">
    update zb_lsp_balance_detail
    <set>
      <if test="benchmarkId != null">
        benchmark_id = #{benchmarkId,jdbcType=BIGINT},
      </if>
      <if test="freightFee != null">
        freight_fee = #{freightFee,jdbcType=DECIMAL},
      </if>
      <if test="sendGoodFee != null">
        send_good_fee = #{sendGoodFee,jdbcType=DECIMAL},
      </if>
      <if test="premiumFee != null">
        premium_fee = #{premiumFee,jdbcType=DECIMAL},
      </if>
      <if test="invoiceFee != null">
        invoice_fee = #{invoiceFee,jdbcType=DECIMAL},
      </if>
      <if test="enterFee != null">
        enter_fee = #{enterFee,jdbcType=DECIMAL},
      </if>
      <if test="upstairsFee != null">
        upstairs_fee = #{upstairsFee,jdbcType=DECIMAL},
      </if>
      <if test="signedReceiveFee != null">
        signed_receive_fee = #{signedReceiveFee,jdbcType=DECIMAL},
      </if>
      <if test="unloadFee != null">
        unload_fee = #{unloadFee,jdbcType=DECIMAL},
      </if>
      <if test="expressFee != null">
        express_fee = #{expressFee,jdbcType=DECIMAL},
      </if>
      <if test="changeWaybillFee != null">
        change_waybill_fee = #{changeWaybillFee,jdbcType=DECIMAL},
      </if>
      <if test="damagerFee != null">
        damager_fee = #{damagerFee,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangkuo.zxb.lsp.provider.db.po.TZbLspBalanceDetail">
    update zb_lsp_balance_detail
    set benchmark_id = #{benchmarkId,jdbcType=BIGINT},
      freight_fee = #{freightFee,jdbcType=DECIMAL},
      send_good_fee = #{sendGoodFee,jdbcType=DECIMAL},
      premium_fee = #{premiumFee,jdbcType=DECIMAL},
      invoice_fee = #{invoiceFee,jdbcType=DECIMAL},
      enter_fee = #{enterFee,jdbcType=DECIMAL},
      upstairs_fee = #{upstairsFee,jdbcType=DECIMAL},
      signed_receive_fee = #{signedReceiveFee,jdbcType=DECIMAL},
      unload_fee = #{unloadFee,jdbcType=DECIMAL},
      express_fee = #{expressFee,jdbcType=DECIMAL},
      change_waybill_fee = #{changeWaybillFee,jdbcType=DECIMAL},
      damager_fee = #{damagerFee,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="findByBenchmarkId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from zb_lsp_balance_detail
        where benchmark_id = #{benchmarkId,jdbcType=BIGINT}
    </select>

    <select id="selectLspBalanceDetailListByWaybillId" parameterType="java.lang.Long" resultType="com.wangkuo.zxb.lsp.api.dto.output.ZbLspBalanceDetailOutput">
       SELECT bd.*
            FROM zb_lsp_balance_detail as bd
            INNER JOIN sb_waybill_fee_balance_with_benchmark as wb ON bd.benchmark_id = wb.id
            INNER JOIN lsp_waybill_change as wc ON wc.benchmark_id = bd.benchmark_id
        where wc.`status` = 1 and wc.waybill_id = #{waybillId,jdbcType=BIGINT}
    </select>
</mapper>